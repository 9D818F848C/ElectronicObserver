<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AACITooltip" xml:space="preserve">
    <value>対空カットイン: {0}
カットイン種別: {1} ({2})</value>
  </data>
  <data name="AACutIn" xml:space="preserve">
    <value>対空カットイン</value>
  </data>
  <data name="AAPower" xml:space="preserve">
    <value>対空砲火</value>
  </data>
  <data name="AirPower" xml:space="preserve">
    <value>制空戦力</value>
  </data>
  <data name="AirSuperiority" xml:space="preserve">
    <value>制空権</value>
  </data>
  <data name="AntiAir" xml:space="preserve">
    <value>対空</value>
  </data>
  <data name="Armor" xml:space="preserve">
    <value>装甲</value>
  </data>
  <data name="Arsenal" xml:space="preserve">
    <value>工廠</value>
  </data>
  <data name="ArsenalLog" xml:space="preserve">
    <value>工廠ドック #{0}で {1}の建造を開始しました。({2}/{3}/{4}/{5}-{6} 秘書艦: {7})</value>
  </data>
  <data name="ASTooltip" xml:space="preserve">
    <value>確保: {0}\r\n優勢: {1}\r\n均衡: {2}\r\n劣勢: {3}\r\n</value>
  </data>
  <data name="ASW" xml:space="preserve">
    <value>対潜</value>
  </data>
  <data name="Battle" xml:space="preserve">
    <value>戦闘</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="Contacting" xml:space="preserve">
    <value>触接中</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>クリップボードにコピー(&amp;C)</value>
  </data>
  <data name="DamageDone" xml:space="preserve">
    <value>与ダメージ</value>
  </data>
  <data name="DamagePct" xml:space="preserve">
    <value>損害率</value>
  </data>
  <data name="DayBattle" xml:space="preserve">
    <value>昼戦</value>
  </data>
  <data name="Dock" xml:space="preserve">
    <value>入渠</value>
  </data>
  <data name="DockTime" xml:space="preserve">
    <value>入渠時間</value>
  </data>
  <data name="EncounterType" xml:space="preserve">
    <value>交戦形態</value>
  </data>
  <data name="EnemyFleet" xml:space="preserve">
    <value>敵軍艦隊</value>
  </data>
  <data name="EnemyFormation" xml:space="preserve">
    <value>敵陣形</value>
  </data>
  <data name="EnemyScout" xml:space="preserve">
    <value>敵索敵</value>
  </data>
  <data name="EscortFleet" xml:space="preserve">
    <value>随伴艦隊</value>
  </data>
  <data name="Evasion" xml:space="preserve">
    <value>回避</value>
  </data>
  <data name="FatigueRestoreTime" xml:space="preserve">
    <value>完全回復まで 約 {0:D2}:{1:D2}</value>
  </data>
  <data name="Firepower" xml:space="preserve">
    <value>火力</value>
  </data>
  <data name="FleetTooltip" xml:space="preserve">
    <value>Lv合計: {0} / 平均: {1:0.00}\r\n{2}艦隊\r\nドラム缶搭載: {3}個 ({4}艦)\r\n大発動艇搭載: {5}個\r\n総積載: 燃 {6} / 弾 {7}\r\n(1戦当たり 燃 {8} / 弾 {9})</value>
  </data>
  <data name="FriendlyFleet" xml:space="preserve">
    <value>自軍艦隊</value>
  </data>
  <data name="FriendlyFormation" xml:space="preserve">
    <value>味方陣形</value>
  </data>
  <data name="FriendlyScout" xml:space="preserve">
    <value>味方索敵</value>
  </data>
  <data name="IsTaiha" xml:space="preserve">
    <value>大破しています！</value>
  </data>
  <data name="LoS" xml:space="preserve">
    <value>索敵</value>
  </data>
  <data name="LoSTooltip" xml:space="preserve">
    <value>(旧)2-5式: {0}\r\n2-5式(秋): {1}\r\n2-5新秋簡易式: {2}\r\n</value>
  </data>
  <data name="Luck" xml:space="preserve">
    <value>運</value>
  </data>
  <data name="NightBattle" xml:space="preserve">
    <value>夜戦</value>
  </data>
  <data name="NightContact" xml:space="preserve">
    <value>夜間触接</value>
  </data>
  <data name="NightContacting" xml:space="preserve">
    <value>夜間触接中</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>(なし)</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>射程</value>
  </data>
  <data name="RemainingExpeds" xml:space="preserve">
    <value>あと {0} 回遠征可能</value>
  </data>
  <data name="Retreating" xml:space="preserve">
    <value>退避中</value>
  </data>
  <data name="Scouting" xml:space="preserve">
    <value>索敵</value>
  </data>
  <data name="ScreenCapture" xml:space="preserve">
    <value>この画面をキャプチャ(&amp;S)</value>
  </data>
  <data name="SearchlightUsed" xml:space="preserve">
    <value>探照灯照射</value>
  </data>
  <data name="SecondStage" xml:space="preserve">
    <value>第2次</value>
  </data>
  <data name="ShipGirl" xml:space="preserve">
    <value>艦娘</value>
  </data>
  <data name="ShipTooltip" xml:space="preserve">
    <value>{0} {1}\n火力: {2}/{3}\n雷装: {4}/{5}\n対空: {6}/{7}\n装甲: {8}/{9}\n対潜: {10}/{11}\n回避: {12}/{13}\n索敵: {14}/{15}\n運: {16}\n射程: {17} / 速力: {18}\n(右クリックで図鑑)\n</value>
  </data>
  <data name="ShotDown" xml:space="preserve">
    <value>撃墜</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>速力</value>
  </data>
  <data name="Stage2AATooltip" xml:space="preserve">
    <value>第1次: -{0}/{1}\r\n第2次: -{2}/{3}\r\n</value>
  </data>
  <data name="Stage2ContactTooltip" xml:space="preserve">
    <value>{0}触接中\r\n第1次: {1}\r\n第2次: {2}</value>
  </data>
  <data name="StageXAACI" xml:space="preserve">
    <value>第{0}次: {1}\r\nカットイン種別: {2} ({3})\r\n</value>
  </data>
  <data name="StageXAACIFail" xml:space="preserve">
    <value>第{0}次: (発動せず)\r\n</value>
  </data>
  <data name="StarShellUsed" xml:space="preserve">
    <value>照明弾投射</value>
  </data>
  <data name="TimeToCompletion" xml:space="preserve">
    <value>完了日時</value>
  </data>
  <data name="To150" xml:space="preserve">
    <value>Lv150まで: {0}</value>
  </data>
  <data name="To99" xml:space="preserve">
    <value>Lv99まで: {0}</value>
  </data>
  <data name="ToHeavy" xml:space="preserve">
    <value>大破まで: {0}</value>
  </data>
  <data name="ToMidAndHeavy" xml:space="preserve">
    <value>中破まで: {0} / 大破まで: {1}\n</value>
  </data>
  <data name="ToNextLevel" xml:space="preserve">
    <value>次のレベルまで: {0}</value>
  </data>
  <data name="ToRemodel" xml:space="preserve">
    <value>改装まで: {0}</value>
  </data>
  <data name="Torpedo" xml:space="preserve">
    <value>雷装</value>
  </data>
  <data name="TotalLoS" xml:space="preserve">
    <value>索敵能力</value>
  </data>
  <data name="WCWarningTitle" xml:space="preserve">
    <value>ウィンドウキャプチャの確認</value>
  </data>
  <data name="WindowCapture" xml:space="preserve">
    <value>ウィンドウキャプチャ</value>
  </data>
  <data name="WindowCaptureInst" xml:space="preserve">
    <value>取り込みたいウィンドウへボタンをドラッグ＆ドロップしてください。</value>
  </data>
  <data name="WindowCaptureWarning" xml:space="preserve">
    <value>このウィンドウをキャプチャします。よろしいですか？

注意: ウィンドウによっては正常に取り込めず、不安定になる可能性があります。
データを保存する・母港に戻るなど、安全を確保してから実行してください。
</value>
  </data>
  <data name="WinRank" xml:space="preserve">
    <value>戦績判定</value>
  </data>
</root>